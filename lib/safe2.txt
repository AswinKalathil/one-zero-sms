-- Step 1: Retrieve all subjects for each student using their stream_id
CREATE TEMP TABLE IF NOT EXISTS student_subjects AS
SELECT 
    s.id AS student_id,
    sub.id AS subject_id
FROM student_table s
JOIN stream_table st ON s.stream_id = st.id
JOIN stream_subjects_table ss ON ss.stream_id = st.id  -- Connect through stream_subjects_table
JOIN subject_table sub ON sub.id = ss.subject_id       -- Link to subjects via stream_subjects_table
WHERE s.id IN (
    '0db53811-350b-4b98-941c-8b45a0f8c607',  -- Aswin Kalathil
    '21a57327-d88a-4808-becb-d32430f9c9b9',  -- Ajith Jose Shaji
    '2ada9c05-3e60-4ea3-8b4e-d63cd7c0a9ae',  -- Mammad Bazed Ali
    'd818dcdd-17b1-42a4-aa0c-f06afdc44404',  -- Thoukeer ibnu ali ashraf A
    'f3086c0a-25a2-4fe1-ac48-dce6a26b0bb0',  -- Keerthi
    '860d6e57-931a-4e38-ba8b-8d80e1ce7b99',  -- Devika
    '35f1cedb-17eb-409a-b0a6-e86e35fe9e3a',  -- Akssay Mathew
    '50f87dcd-7c75-40ff-9b3b-9e4be3d68b9c',  -- Gogul K
    'ae6405be-a459-4c02-a675-ac32baf5848e'   -- Rohan S Rahul
);

-- Step 2: Insert 20 test records for each subject found in student_subjects
WITH test_numbers AS (
    SELECT 
        ROW_NUMBER() OVER () AS n  -- Generate numbers from 1 to 20
    FROM 
        (SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
         UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10
         UNION ALL SELECT 11 UNION ALL SELECT 12 UNION ALL SELECT 13 UNION ALL SELECT 14 UNION ALL SELECT 15
         UNION ALL SELECT 16 UNION ALL SELECT 17 UNION ALL SELECT 18 UNION ALL SELECT 19 UNION ALL SELECT 20) AS nums
)

INSERT INTO test_table (id, subject_id, topic, max_mark, test_date, last_modified)
SELECT 
    hex(randomblob(16)),  -- Generate a unique ID for the test
    ss.subject_id,
    'Chapter ' || tn.n AS topic,  -- Exam topic, e.g., 'Chapter 1', 'Chapter 2', ..., 'Chapter 20'
    100,
    DATE('now', '+' || (tn.n * 7) || ' days'),  -- Schedule each test 7 days apart
    DATETIME('now')
FROM student_subjects ss
JOIN test_numbers tn ON tn.n <= 20  -- Join to limit the number of exams to 20 per subject
GROUP BY ss.subject_id, tn.n;  -- Ensure distinct entries per subject and test number

-- Step 3: Link each test to the student in test_score_table with random scores above 50%
INSERT INTO test_score_table (id, score, student_id, test_id, last_modified)
SELECT 
    hex(randomblob(16)),  -- Generate a unique ID for the test score
    ABS(RANDOM() % 10) + 80,  -- Generate a random score between 80 and 90
    ss.student_id,
    t.id,
    DATETIME('now')
FROM student_subjects ss
JOIN test_table t ON t.subject_id = ss.subject_id
WHERE t.topic LIKE 'Chapter %'; -- Only include the exams we just added
