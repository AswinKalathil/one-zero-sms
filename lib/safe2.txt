import 'package:flutter/material.dart';
import 'package:one_zero/database_helper.dart';
import 'package:syncfusion_flutter_charts/charts.dart';

class ScoreDataPoints {
  ScoreDataPoints({required this.x, required this.y});

  final int x; // Test index
  final int y; // Score percentage

  @override
  String toString() => 'x: $x, y: $y'; // Override toString for debugging
}

class TestAnalytics extends StatelessWidget {
  final List<String> allSubjects;
  final List<List<Map<String, dynamic>>> testResults;
  Map<String, List<ScoreDataPoints>> graphListMap = {};

  TestAnalytics(
      {required this.allSubjects, required this.testResults, required Key key});
  DatabaseHelper dbHelper = DatabaseHelper();
  void createDataPointsForSubject(String subject) {
    // Get the index of the subject in the allSubjects list
    int subjectIndex = allSubjects.indexOf(subject);

    if (subjectIndex == -1) {
      print('Subject not found');
      return; // If subject not found in the list, return
    }

    // Get the list of test results for this subject
    List<Map<String, dynamic>> subjectTestResults = testResults[subjectIndex];
    List<ScoreDataPoints> dataPoints = [];

    // Iterate over the test results for the selected subject
    for (var i = 0; i < subjectTestResults.length; i++) {
      var test = subjectTestResults[i];

      // Extract score and max_mark
      int score = test['score'];
      int maxMark = test['max_mark'];

      // Create data point where x = test index and y = score percentage
      ScoreDataPoints dataPoint = ScoreDataPoints(
        x: i + 1, // Test index (starting from 1)
        y: (score / maxMark * 100).toInt(), // Score percentage
      );

      // Add the data point to the list
      dataPoints.add(dataPoint);
    }

    // Add the data points for this subject to the graphListMap
    graphListMap[subject] = dataPoints;

    // Output for debugging purposes
    print("Data points for $subject: $dataPoints");
  }

// Class to store the data points

  @override
  Widget build(BuildContext context) {
    // print('AllSubjects: $allSubjects');
    // print('TestResults: $testResults');
    for (var subject in allSubjects) {
      createDataPointsForSubject(subject);
    }

    // print("points: $graphListMap");

    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        const SizedBox(height: 10),
        testResults.isNotEmpty
            ? ConstrainedBox(
                constraints: BoxConstraints(
                  maxHeight: MediaQuery.of(context).size.height *
                      3, // Adjust height as needed
                ),
                child: ListView.builder(
                  physics:
                      const NeverScrollableScrollPhysics(), // Disable scrolling

                  itemCount: allSubjects.length,
                  itemBuilder: (context, index) {
                    var result = testResults[index];
                    return Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Padding(
                          padding: const EdgeInsets.only(left: 100.0),
                          child: Text(allSubjects[index],
                              style: const TextStyle(
                                  fontSize: 30, fontWeight: FontWeight.bold)),
                        ),
                        const SizedBox(height: 10),
                        Row(
                          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                          children: [
                            Expanded(
                              child: FractionallySizedBox(
                                widthFactor: .8,
                                child: Padding(
                                  padding: const EdgeInsets.all(20.0),
                                  child: Column(
                                    crossAxisAlignment:
                                        CrossAxisAlignment.start,
                                    children: [
                                      Table(
                                          border: TableBorder.all(
                                              color: Colors.grey, width: .4),
                                          columnWidths: const {
                                            0: FlexColumnWidth(1),
                                            1: FlexColumnWidth(3),
                                            2: FlexColumnWidth(1),
                                            3: FlexColumnWidth(1),
                                          },
                                          children: [
                                            TableRow(
                                              decoration: BoxDecoration(
                                                color: Theme.of(context)
                                                    .primaryColor,
                                              ),
                                              children: const [
                                                Padding(
                                                  padding: EdgeInsets.all(6.0),
                                                  child: Center(
                                                    child: Text(
                                                      'SL No.',
                                                      style: TextStyle(
                                                          color: Colors.white,
                                                          fontSize: 16,
                                                          fontWeight:
                                                              FontWeight.bold),
                                                    ),
                                                  ),
                                                ),
                                                Padding(
                                                  padding: EdgeInsets.all(6.0),
                                                  child: Center(
                                                    child: Text(
                                                      'Chapter Name',
                                                      style: TextStyle(
                                                          color: Colors.white,
                                                          fontSize: 16,
                                                          fontWeight:
                                                              FontWeight.bold),
                                                    ),
                                                  ),
                                                ),
                                                Padding(
                                                  padding: EdgeInsets.all(6.0),
                                                  child: Center(
                                                    child: Text(
                                                      'Marks',
                                                      style: TextStyle(
                                                          color: Colors.white,
                                                          fontSize: 16,
                                                          fontWeight:
                                                              FontWeight.bold),
                                                    ),
                                                  ),
                                                ),
                                                Padding(
                                                  padding: EdgeInsets.all(6.0),
                                                  child: Center(
                                                    child: Text(
                                                      'Date',
                                                      style: TextStyle(
                                                          color: Colors.white,
                                                          fontSize: 16,
                                                          fontWeight:
                                                              FontWeight.bold),
                                                    ),
                                                  ),
                                                ),
                                              ],
                                            ),
                                          ]),
                                      SizedBox(
                                        width: double.infinity,
                                        height: 300,
                                        child: SingleChildScrollView(
                                          scrollDirection: Axis.vertical,
                                          child: Container(
                                            decoration: BoxDecoration(),
                                            child: Column(
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                result.isNotEmpty
                                                    ? Table(
                                                        border: TableBorder.all(
                                                            color: Colors.grey,
                                                            width: .4),
                                                        columnWidths: const {
                                                          0: FlexColumnWidth(1),
                                                          1: FlexColumnWidth(3),
                                                          2: FlexColumnWidth(1),
                                                          3: FlexColumnWidth(1),
                                                        },
                                                        children: [
                                                          ...result
                                                              .asMap()
                                                              .entries
                                                              .map(
                                                            (entry) {
                                                              int rowIndex =
                                                                  entry.key + 1;
                                                              var subject =
                                                                  entry.value;
                                                              return TableRow(
                                                                decoration: BoxDecoration(
                                                                    color: (Theme.of(context).brightness ==
                                                                            Brightness
                                                                                .light)
                                                                        ? (rowIndex % 2 ==
                                                                                0
                                                                            ? Colors
                                                                                .grey.shade200
                                                                            : Colors
                                                                                .white)
                                                                        : (rowIndex % 2 ==
                                                                                0
                                                                            ? Colors.grey.shade600
                                                                            : Colors.grey.shade700)),
                                                                children: [
                                                                  Container(
                                                                    height: 30,
                                                                    padding:
                                                                        const EdgeInsets
                                                                            .all(
                                                                            5.5),
                                                                    child: FittedBox(
                                                                        child: Text(rowIndex.toString() ??
                                                                            '')),
                                                                  ),
                                                                  Container(
                                                                    height: 30,
                                                                    padding:
                                                                        const EdgeInsets
                                                                            .all(
                                                                            5.5),
                                                                    child:
                                                                        FittedBox(
                                                                      child: Text(
                                                                          subject['topic'].toString() ??
                                                                              '-'),
                                                                    ),
                                                                  ),
                                                                  Container(
                                                                    height: 30,
                                                                    padding:
                                                                        const EdgeInsets
                                                                            .all(
                                                                            5.5),
                                                                    child: FittedBox(
                                                                        child: Text("${subject['score']} / ${subject['max_mark']}" ??
                                                                            '')),
                                                                  ),
                                                                  Container(
                                                                    height: 30,
                                                                    padding:
                                                                        const EdgeInsets
                                                                            .all(
                                                                            5.5),
                                                                    child: FittedBox(
                                                                        child: Text(subject['test_date'].toString().substring(0,
                                                                                10) ??
                                                                            '')),
                                                                  ),
                                                                ],
                                                              );
                                                            },
                                                          ),
                                                        ],
                                                      )
                                                    : Container(
                                                        height:
                                                            200, // Adjust height as needed
                                                        child: const Center(
                                                          child: Text(
                                                              'No tests available'),
                                                        ),
                                                      ),
                                              ],
                                            ),
                                          ),
                                        ),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                            Expanded(
                              child: FractionallySizedBox(
                                widthFactor: .8,
                                child: Container(
                                  padding: EdgeInsets.all(16),
                                  decoration: BoxDecoration(
                                      border: Border.all(
                                    color: Theme.of(context).primaryColor,
                                  )),
                                  child: Column(children: [
                                    //Initialize the chart widget
                                    SfCartesianChart(
                                        primaryXAxis: CategoryAxis(),
                                        // Chart title
                                        title: ChartTitle(
                                            text:
                                                'Exam Performance Trend: ${allSubjects[index]}',
                                            textStyle: TextStyle(
                                                fontWeight: FontWeight.bold)),
                                        // Enable legend
                                        legend: Legend(
                                          isVisible: true,
                                        ),
                                        // Enable tooltip
                                        tooltipBehavior:
                                            TooltipBehavior(enable: true),
                                        series: <CartesianSeries<
                                            ScoreDataPoints, int>>[
                                          LineSeries<ScoreDataPoints, int>(
                                              dataSource: graphListMap[
                                                  allSubjects[index]],
                                              xValueMapper:
                                                  (ScoreDataPoints exam, _) =>
                                                      exam.x,
                                              yValueMapper:
                                                  (ScoreDataPoints exam, _) =>
                                                      exam.y,
                                              name: 'Percetage Score',
                                              // Enable data label
                                              dataLabelSettings:
                                                  DataLabelSettings(
                                                      isVisible: true))
                                        ]),
                                  ]),
                                ),
                              ),
                            ),
                          ],
                        ),
                        Divider()
                      ],
                    );
                  },
                ),
              )
            : Container(
                height: 200, // Adjust height as needed
                child: const Center(
                  child: Text('No tests available'),
                ),
              ),
      ],
    );
  }

  void setGraphLists() {}
}
